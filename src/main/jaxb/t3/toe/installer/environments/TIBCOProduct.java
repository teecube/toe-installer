//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.08.30 at 11:18:01 AM CEST 
//


package t3.toe.installer.environments;

import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for TIBCOProduct complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TIBCOProduct"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://teecu.be/toe-installer/environments}Product"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="dependencies" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;choice maxOccurs="unbounded"&gt;
 *                     &lt;element name="httpRemote" type="{http://teecu.be/toe-installer/environments}HttpRemotePackage"/&gt;
 *                     &lt;element name="mavenArtifact" type="{http://teecu.be/toe-installer/environments}MavenArtifactPackage"/&gt;
 *                     &lt;element name="mavenTIBCOArtifact" type="{http://teecu.be/toe-installer/environments}MavenTIBCOArtifactPackage"/&gt;
 *                     &lt;element name="fileWithVersion" type="{http://teecu.be/toe-installer/environments}LocalFileWithVersion"/&gt;
 *                   &lt;/choice&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="hotfixes" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;choice maxOccurs="unbounded"&gt;
 *                     &lt;element name="mavenArtifact" type="{http://teecu.be/toe-installer/environments}MavenArtifactPackage"/&gt;
 *                     &lt;element name="mavenTIBCOArtifact" type="{http://teecu.be/toe-installer/environments}MavenTIBCOArtifactPackage"/&gt;
 *                     &lt;element name="fileWithVersion" type="{http://teecu.be/toe-installer/environments}LocalFileWithVersion"/&gt;
 *                   &lt;/choice&gt;
 *                 &lt;/sequence&gt;
 *                 &lt;attribute name="installWhenProductIsSkipped" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" default="@type" /&gt;
 *       &lt;attribute name="type" use="required" type="{http://teecu.be/toe-installer/environments}ProductType" /&gt;
 *       &lt;attribute name="configure" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TIBCOProduct", propOrder = {
    "dependencies",
    "hotfixes"
})
public class TIBCOProduct
    extends Product
{

    protected TIBCOProduct.Dependencies dependencies;
    protected TIBCOProduct.Hotfixes hotfixes;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "type", required = true)
    protected ProductType type;
    @XmlAttribute(name = "configure")
    protected Boolean configure;

    /**
     * Gets the value of the dependencies property.
     * 
     * @return
     *     possible object is
     *     {@link TIBCOProduct.Dependencies }
     *     
     */
    public TIBCOProduct.Dependencies getDependencies() {
        return dependencies;
    }

    /**
     * Sets the value of the dependencies property.
     * 
     * @param value
     *     allowed object is
     *     {@link TIBCOProduct.Dependencies }
     *     
     */
    public void setDependencies(TIBCOProduct.Dependencies value) {
        this.dependencies = value;
    }

    /**
     * Gets the value of the hotfixes property.
     * 
     * @return
     *     possible object is
     *     {@link TIBCOProduct.Hotfixes }
     *     
     */
    public TIBCOProduct.Hotfixes getHotfixes() {
        return hotfixes;
    }

    /**
     * Sets the value of the hotfixes property.
     * 
     * @param value
     *     allowed object is
     *     {@link TIBCOProduct.Hotfixes }
     *     
     */
    public void setHotfixes(TIBCOProduct.Hotfixes value) {
        this.hotfixes = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        if (name == null) {
            return "@type";
        } else {
            return name;
        }
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link ProductType }
     *     
     */
    public ProductType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProductType }
     *     
     */
    public void setType(ProductType value) {
        this.type = value;
    }

    /**
     * Gets the value of the configure property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isConfigure() {
        if (configure == null) {
            return true;
        } else {
            return configure;
        }
    }

    /**
     * Sets the value of the configure property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setConfigure(Boolean value) {
        this.configure = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;choice maxOccurs="unbounded"&gt;
     *           &lt;element name="httpRemote" type="{http://teecu.be/toe-installer/environments}HttpRemotePackage"/&gt;
     *           &lt;element name="mavenArtifact" type="{http://teecu.be/toe-installer/environments}MavenArtifactPackage"/&gt;
     *           &lt;element name="mavenTIBCOArtifact" type="{http://teecu.be/toe-installer/environments}MavenTIBCOArtifactPackage"/&gt;
     *           &lt;element name="fileWithVersion" type="{http://teecu.be/toe-installer/environments}LocalFileWithVersion"/&gt;
     *         &lt;/choice&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "httpRemoteOrMavenArtifactOrMavenTIBCOArtifact"
    })
    public static class Dependencies {

        @XmlElements({
            @XmlElement(name = "httpRemote", type = HttpRemotePackage.class),
            @XmlElement(name = "mavenArtifact", type = MavenArtifactPackage.class),
            @XmlElement(name = "mavenTIBCOArtifact", type = MavenTIBCOArtifactPackage.class),
            @XmlElement(name = "fileWithVersion", type = LocalFileWithVersion.class)
        })
        protected List<AbstractPackage> httpRemoteOrMavenArtifactOrMavenTIBCOArtifact;

        /**
         * Gets the value of the httpRemoteOrMavenArtifactOrMavenTIBCOArtifact property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the httpRemoteOrMavenArtifactOrMavenTIBCOArtifact property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getHttpRemoteOrMavenArtifactOrMavenTIBCOArtifact().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link HttpRemotePackage }
         * {@link MavenArtifactPackage }
         * {@link MavenTIBCOArtifactPackage }
         * {@link LocalFileWithVersion }
         * 
         * 
         */
        public List<AbstractPackage> getHttpRemoteOrMavenArtifactOrMavenTIBCOArtifact() {
            if (httpRemoteOrMavenArtifactOrMavenTIBCOArtifact == null) {
                httpRemoteOrMavenArtifactOrMavenTIBCOArtifact = new ArrayList<AbstractPackage>();
            }
            return this.httpRemoteOrMavenArtifactOrMavenTIBCOArtifact;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;choice maxOccurs="unbounded"&gt;
     *           &lt;element name="mavenArtifact" type="{http://teecu.be/toe-installer/environments}MavenArtifactPackage"/&gt;
     *           &lt;element name="mavenTIBCOArtifact" type="{http://teecu.be/toe-installer/environments}MavenTIBCOArtifactPackage"/&gt;
     *           &lt;element name="fileWithVersion" type="{http://teecu.be/toe-installer/environments}LocalFileWithVersion"/&gt;
     *         &lt;/choice&gt;
     *       &lt;/sequence&gt;
     *       &lt;attribute name="installWhenProductIsSkipped" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion"
    })
    public static class Hotfixes {

        @XmlElements({
            @XmlElement(name = "mavenArtifact", type = MavenArtifactPackage.class),
            @XmlElement(name = "mavenTIBCOArtifact", type = MavenTIBCOArtifactPackage.class),
            @XmlElement(name = "fileWithVersion", type = LocalFileWithVersion.class)
        })
        protected List<AbstractPackage> mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion;
        @XmlAttribute(name = "installWhenProductIsSkipped")
        protected Boolean installWhenProductIsSkipped;

        /**
         * Gets the value of the mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getMavenArtifactOrMavenTIBCOArtifactOrFileWithVersion().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link MavenArtifactPackage }
         * {@link MavenTIBCOArtifactPackage }
         * {@link LocalFileWithVersion }
         * 
         * 
         */
        public List<AbstractPackage> getMavenArtifactOrMavenTIBCOArtifactOrFileWithVersion() {
            if (mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion == null) {
                mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion = new ArrayList<AbstractPackage>();
            }
            return this.mavenArtifactOrMavenTIBCOArtifactOrFileWithVersion;
        }

        /**
         * Gets the value of the installWhenProductIsSkipped property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isInstallWhenProductIsSkipped() {
            if (installWhenProductIsSkipped == null) {
                return false;
            } else {
                return installWhenProductIsSkipped;
            }
        }

        /**
         * Sets the value of the installWhenProductIsSkipped property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setInstallWhenProductIsSkipped(Boolean value) {
            this.installWhenProductIsSkipped = value;
        }

    }

}
